[{"E:\\React Web\\expmngr\\src\\index.js":"1","E:\\React Web\\expmngr\\src\\App.js":"2","E:\\React Web\\expmngr\\src\\firebase.js":"3","E:\\React Web\\expmngr\\src\\Auth\\SignUp.js":"4","E:\\React Web\\expmngr\\src\\Auth\\SignIn.js":"5"},{"size":258,"mtime":1641753416837,"results":"6","hashOfConfig":"7"},{"size":186,"mtime":1644446349736,"results":"8","hashOfConfig":"7"},{"size":516,"mtime":1644443240694,"results":"9","hashOfConfig":"7"},{"size":1072,"mtime":1644443918978,"results":"10","hashOfConfig":"7"},{"size":1623,"mtime":1644445746554,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"n1q02v",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"E:\\React Web\\expmngr\\src\\index.js",[],["24","25"],"E:\\React Web\\expmngr\\src\\App.js",[],"E:\\React Web\\expmngr\\src\\firebase.js",[],"E:\\React Web\\expmngr\\src\\Auth\\SignUp.js",[],"E:\\React Web\\expmngr\\src\\Auth\\SignIn.js",["26","27","28"],"import { useEffect, useState } from 'react';\r\nimport {\r\n\tsignInWithEmailAndPassword,\r\n\tgetAuth,\r\n\tsignOut,\r\n\tonAuthStateChanged,\r\n\tsendPasswordResetEmail,\r\n} from 'firebase/auth';\r\nimport { app, db } from '../firebase';\r\n\r\nconst SignIn = () => {\r\n\tconst [signInEmail, setSignInEmail] = useState('');\r\n\tconst [signInPassword, setSignInPassword] = useState('');\r\n\tconst auth = getAuth(app);\r\n\r\n\tconst handleSignIn = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst user = await signInWithEmailAndPassword(\r\n\t\t\tauth,\r\n\t\t\tsignInEmail,\r\n\t\t\tsignInPassword\r\n\t\t);\r\n\t\tconsole.log(user.user);\r\n\t};\r\n\tconst handleSignOut = async () => {\r\n\t\tawait signOut(auth);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tonAuthStateChanged(auth, (user) => {\r\n\t\t\tif (user) {\r\n\t\t\t\tconst uid = user.uid;\r\n\t\t\t\tconsole.log('The User is Signed in ' + uid);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('No USER');\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst handleForgotPassword = async () => {\r\n\t\ttry {\r\n\t\t\tawait sendPasswordResetEmail(auth, signInEmail);\r\n\t\t\tconsole.log('Reset Email Sent');\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e.code + ' ' + e.message);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSignIn}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tplaceholder='email'\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tonChange={(e) => setSignInEmail(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input\r\n\t\t\t\t\tplaceholder='password'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tonChange={(e) => setSignInPassword(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<button type='submit'>Sign In</button>\r\n\t\t\t</form>\r\n\t\t\t<button onClick={handleSignOut}>Sign Out</button>\r\n\t\t\t<a onClick={handleForgotPassword}>Forgot Password</a>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default SignIn;\r\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":9,"column":15,"nodeType":"35","messageId":"36","endLine":9,"endColumn":17},{"ruleId":"37","severity":1,"message":"38","line":39,"column":5,"nodeType":"39","endLine":39,"endColumn":7,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":68,"column":4,"nodeType":"43","endLine":68,"endColumn":38},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["46"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [auth]",{"range":"49","text":"50"},[870,872],"[auth]"]